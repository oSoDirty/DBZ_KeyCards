class KeyCard_Config_Directory
{
	static void CreateMainDirectory()
	{
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/"))
        {
			Print("[KCM_Debug] - DNA_Keycards Config: Main directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/");
		}
	}
}

class KeyCard_Config_System
{	
	protected static ref KeyCard_ConfigData_System m_KeyCard_System_ConfigData;
	
	void KeyCard_Config_System()
	{
		LoadConfig();
	}
	
	KeyCard_ConfigData_System GetConfigData()
	{
		if(!m_KeyCard_System_ConfigData)
		{
			LoadConfig();
		}
		return m_KeyCard_System_ConfigData;
	}
	
	protected static void LoadConfig()
	{
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/System/"))
        {
			Print("[KCM_Debug] - DNA_Keycards System: Directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/System/");
		}
		
		m_KeyCard_System_ConfigData = new KeyCard_ConfigData_System();
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/System/" + kcm_ConfigName + "System" + kcm_ConfigExtension))
        {
			Print("[KCM_Debug] - DNA_Keycards System: Config not found, creating default config!");
            CreateDefaultConfig();
        }
		else
		{
			JsonFileLoader<KeyCard_ConfigData_System>.JsonLoadFile(kcm_ProfilePath + kcm_ConfigFolderName + "/System/" + kcm_ConfigName + "System" + kcm_ConfigExtension, m_KeyCard_System_ConfigData);
		}
	}
	
	static void CreateDefaultConfig()
	{	
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(0) Use KCM To Spawn Entites (1 true, 0 false)",0));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(1) Yellow Spawn Main Weapon (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(2) Yellow Spawn Side Arm (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(3) Yellow Spawn Food (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(4) Yellow Spawn Drinks (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(5) Yellow Spawn Tools (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(6) Yellow Spawn Buiding Materials (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(7) Yellow Spawn Valuables (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(8) Yellow Spawn Clothing (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(9) Yellow Crates Spawn Count",5));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(10) Green Spawn Main Weapon (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(11) Green Spawn Side Arm (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(12) Green Spawn Food (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(13) Green Spawn Drinks (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(14) Green Spawn Tools (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(15) Green Spawn Buiding Materials (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(16) Green Spawn Valuables (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(17) Green Spawn Clothing (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(18) Green Crates Spawn Count",4));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(19) Blue Spawn Main Weapon (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(20) Blue Spawn Side Arm (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(21) Blue Spawn Food (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(22) Blue Spawn Drinks (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(23) Blue Spawn Tools (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(24) Blue Spawn Buiding Materials (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(25) Blue Spawn Valuables (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(26) Blue Spawn Clothing (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(27) Blue Crates Spawn Count",3));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(28) Purple Spawn Main Weapon (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(29) Purple Spawn Side Arm (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(30) Purple Spawn Food (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(31) Purple Spawn Drinks (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(32) Purple Spawn Tools (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(33) Purple Spawn Buiding Materials (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(34) Purple Spawn Valuables (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(35) Purple Spawn Clothing (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(36) Purple Crates Spawn Count",2));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(37) Red Spawn Main Weapon (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(38) Red Spawn Side Arm (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(39) Red Spawn Food (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(40) Red Spawn Drinks (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(41) Red Spawn Tools (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(42) Red Spawn Buiding Materials (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(43) Red Spawn Valuables (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(44) Red Spawn Clothing (1 true, 0 false)",1));
		m_KeyCard_System_ConfigData.GetSystemArray().Insert(new KCM_Config_System("(45) Red Crates Spawn Count",1));
		
		JsonFileLoader<KeyCard_ConfigData_System>.JsonSaveFile(kcm_ProfilePath + kcm_ConfigFolderName + "/System/" + kcm_ConfigName + "System" + kcm_ConfigExtension, m_KeyCard_System_ConfigData);
	}
}

class KeyCard_Config_Base
{	
	protected static ref KeyCard_ConfigData_Base m_KeyCard_Base_ConfigData;

	void KeyCard_Config_Base()
	{
		LoadConfig();
	}
	
	KeyCard_ConfigData_Base GetConfigData()
	{
		if(!m_KeyCard_Base_ConfigData)
		{
			LoadConfig();
		}
		return m_KeyCard_Base_ConfigData;
	}
	
	protected static void LoadConfig()
	{
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Basic/"))
        {
			Print("[KCM_Debug] - DNA_Keycards Basic: Directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/Basic/");
		}
		
		m_KeyCard_Base_ConfigData = new KeyCard_ConfigData_Base();
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Basic/" + kcm_ConfigName + "Basic" + kcm_ConfigExtension))
        {
			Print("[KCM_Debug] - DNA_Keycards Basic: Config not found, creating default config!");
            CreateDefaultConfig();
        }
		else
		{
			JsonFileLoader<KeyCard_ConfigData_Base>.JsonLoadFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Basic/" + kcm_ConfigName + "Basic" + kcm_ConfigExtension, m_KeyCard_Base_ConfigData);
		}
	}
	
	static void CreateDefaultConfig()
	{
		JsonFileLoader<KeyCard_ConfigData_Base>.JsonSaveFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Basic/" + kcm_ConfigName + "Basic" + kcm_ConfigExtension, m_KeyCard_Base_ConfigData);
	}
}

class KeyCard_Config_Yellow
{	
	protected static ref KeyCard_ConfigData_Yellow m_KeyCard_Yellow_ConfigData;
	
	void KeyCard_Config_Yellow()
	{
		LoadConfig();
	}
	
	KeyCard_ConfigData_Yellow GetConfigData()
	{
		if(!m_KeyCard_Yellow_ConfigData)
		{
			LoadConfig();
		}
		return m_KeyCard_Yellow_ConfigData;
	}
	
	protected static void LoadConfig()
	{
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Yellow/"))
        {
			Print("[KCM_Debug] - DNA_Keycards Yellow Tier: Directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/Yellow/");
		}
		
		m_KeyCard_Yellow_ConfigData = new KeyCard_ConfigData_Yellow();
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Yellow/" + kcm_ConfigName + "Yellow" + kcm_ConfigExtension))
        {
			Print("[KCM_Debug] - DNA_Keycards Yellow Tier: Config not found, creating default config!");
            CreateDefaultConfig();
        }
		else
		{
			JsonFileLoader<KeyCard_ConfigData_Yellow>.JsonLoadFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Yellow/" + kcm_ConfigName + "Yellow" + kcm_ConfigExtension, m_KeyCard_Yellow_ConfigData);
		}
	}
	
	static void CreateDefaultConfig()
	{
		JsonFileLoader<KeyCard_ConfigData_Yellow>.JsonSaveFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Yellow/" + kcm_ConfigName + "Yellow" + kcm_ConfigExtension, m_KeyCard_Yellow_ConfigData);
	}
}

class KeyCard_Config_Green
{	
	protected static ref KeyCard_ConfigData_Green m_KeyCard_Green_ConfigData;
	
	void KeyCard_Config_Green()
	{
		LoadConfig();
	}
	
	KeyCard_ConfigData_Green GetConfigData()
	{
		if(!m_KeyCard_Green_ConfigData)
		{
			LoadConfig();
		}
		return m_KeyCard_Green_ConfigData;
	}
	
	protected static void LoadConfig()
	{
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Green/"))
        {
			Print("[KCM_Debug] - DNA_Keycards Green Tier: Directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/Green/");
		}
		
		m_KeyCard_Green_ConfigData = new KeyCard_ConfigData_Green();
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Green/" + kcm_ConfigName + "Green" + kcm_ConfigExtension))
        {
			Print("[KCM_Debug] - DNA_Keycards Green Tier: Config not found, creating default config!");
            CreateDefaultConfig();
        }
		else
		{
			JsonFileLoader<KeyCard_ConfigData_Green>.JsonLoadFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Green/" + kcm_ConfigName + "Green" + kcm_ConfigExtension, m_KeyCard_Green_ConfigData);
		}
	}
	
	static void CreateDefaultConfig()
	{
		JsonFileLoader<KeyCard_ConfigData_Green>.JsonSaveFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Green/" + kcm_ConfigName + "Green" + kcm_ConfigExtension, m_KeyCard_Green_ConfigData);
	}
}

class KeyCard_Config_Blue
{	
	protected static ref KeyCard_ConfigData_Blue m_KeyCard_Blue_ConfigData;
	
	void KeyCard_Config_Blue()
	{
		LoadConfig();
	}
	
	KeyCard_ConfigData_Blue GetConfigData()
	{
		if(!m_KeyCard_Blue_ConfigData)
		{
			LoadConfig();
		}
		return m_KeyCard_Blue_ConfigData;
	}
	
	protected static void LoadConfig()
	{
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Blue"))
        {
			Print("[KCM_Debug] - DNA_Keycards Blue Tier: Config directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/Blue");
		}
		
		m_KeyCard_Blue_ConfigData = new KeyCard_ConfigData_Blue();
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Blue/" + kcm_ConfigName + "Blue" + kcm_ConfigExtension))
        {
			Print("[KCM_Debug] - DNA_Keycards Blue Tier: Config not found, creating default config!");
            CreateDefaultConfig();
        }
		else
		{
			JsonFileLoader<KeyCard_ConfigData_Blue>.JsonLoadFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Blue/" + kcm_ConfigName + "Blue" + kcm_ConfigExtension, m_KeyCard_Blue_ConfigData);
		}
	}
	
	static void CreateDefaultConfig()
	{
		JsonFileLoader<KeyCard_ConfigData_Blue>.JsonSaveFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Blue/" + kcm_ConfigName + "Blue" + kcm_ConfigExtension, m_KeyCard_Blue_ConfigData);
	}
}

class KeyCard_Config_Purple
{	
	protected static ref KeyCard_ConfigData_Purple m_KeyCard_Purple_ConfigData;
	
	void KeyCard_Config_Purple()
	{
		LoadConfig();
	}
	
	KeyCard_ConfigData_Purple GetConfigData()
	{
		if(!m_KeyCard_Purple_ConfigData)
		{
			LoadConfig();
		}
		return m_KeyCard_Purple_ConfigData;
	}
	
	protected static void LoadConfig()
	{
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Purple/"))
        {
			Print("[KCM_Debug] - DNA_Keycards Purple Tier: Directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/Purple/");
		}
		
		m_KeyCard_Purple_ConfigData = new KeyCard_ConfigData_Purple();
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Purple/" + kcm_ConfigName + "Purple" + kcm_ConfigExtension))
        {
			Print("[KCM_Debug] - DNA_Keycards Purple Tier: Config not found, creating default config!");
            CreateDefaultConfig();
        }
		else
		{
			JsonFileLoader<KeyCard_ConfigData_Purple>.JsonLoadFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Purple/" + kcm_ConfigName + "Purple" + kcm_ConfigExtension, m_KeyCard_Purple_ConfigData);
		}
	}
	
	static void CreateDefaultConfig()
	{
		JsonFileLoader<KeyCard_ConfigData_Purple>.JsonSaveFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Purple/" + kcm_ConfigName + "Purple" + kcm_ConfigExtension, m_KeyCard_Purple_ConfigData);
	}
}

class KeyCard_Config_Red
{	
	protected static ref KeyCard_ConfigData_Red m_KeyCard_Red_ConfigData;
	
	void KeyCard_Config_Red()
	{
		LoadConfig();
	}
	
	KeyCard_ConfigData_Red GetConfigData()
	{
		if(!m_KeyCard_Red_ConfigData)
		{
			LoadConfig();
		}
		return m_KeyCard_Red_ConfigData;
	}
	
	protected static void LoadConfig()
	{		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Red/"))
        {
			Print("[KCM_Debug] - DNA_Keycards Red Tier: Directory not found, creating directory!");
			MakeDirectory(kcm_ProfilePath + kcm_ConfigFolderName + "/Red/");
		}
		
		m_KeyCard_Red_ConfigData = new KeyCard_ConfigData_Red();
		
		if (!FileExist(kcm_ProfilePath + kcm_ConfigFolderName + "/Red/" + kcm_ConfigName + "Red" + kcm_ConfigExtension))
        {
			Print("[KCM_Debug] - DNA_Keycards Red Tier: Config not found, creating default config!");
            CreateDefaultConfig();
        }
		else
		{
			JsonFileLoader<KeyCard_ConfigData_Red>.JsonLoadFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Red/" + kcm_ConfigName + "Red" + kcm_ConfigExtension, m_KeyCard_Red_ConfigData);
		}
	}
	
	static void CreateDefaultConfig()
	{
		JsonFileLoader<KeyCard_ConfigData_Red>.JsonSaveFile(kcm_ProfilePath + kcm_ConfigFolderName + "/Red/" + kcm_ConfigName + "Red" + kcm_ConfigExtension, m_KeyCard_Red_ConfigData);
	}
}

